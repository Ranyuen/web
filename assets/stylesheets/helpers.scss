// {{{ Frameless
/*
  Frameless      <http://framelessgrid.com/>
  by Joni Korpi     <http://jonikorpi.com/>
  licensed under CC0  <http://creativecommons.org/publicdomain/zero/1.0/>
*/


//
// Configuration
//

$font-size: 16px;     // Your base font-size in pixels
$em: $font-size / 1em;  // Shorthand for outputting ems

$column: 48px;  // The column-width of your grid in pixels
$gutter: 24px;  // The gutter-width of your grid in pixels


//
// Column-widths in variables, in ems
//

 $cols1: ( 1 * ($column + $gutter) - $gutter) / $em;
 $cols2: ( 2 * ($column + $gutter) - $gutter) / $em;
 $cols3: ( 3 * ($column + $gutter) - $gutter) / $em;
 $cols4: ( 4 * ($column + $gutter) - $gutter) / $em;
 $cols5: ( 5 * ($column + $gutter) - $gutter) / $em;
 $cols6: ( 6 * ($column + $gutter) - $gutter) / $em;
 $cols7: ( 7 * ($column + $gutter) - $gutter) / $em;
 $cols8: ( 8 * ($column + $gutter) - $gutter) / $em;
 $cols9: ( 9 * ($column + $gutter) - $gutter) / $em;
$cols10: (10 * ($column + $gutter) - $gutter) / $em;
$cols11: (11 * ($column + $gutter) - $gutter) / $em;
$cols12: (12 * ($column + $gutter) - $gutter) / $em;
$cols13: (13 * ($column + $gutter) - $gutter) / $em;
$cols14: (14 * ($column + $gutter) - $gutter) / $em;
$cols15: (15 * ($column + $gutter) - $gutter) / $em;
$cols16: (16 * ($column + $gutter) - $gutter) / $em;


//
// Column-widths in a function, in ems
//

@mixin width ($cols:1) {
  width: ($cols * ($column + $gutter) - $gutter) / $em;
}


/*
  Margin, padding, and border resets
  except for form elements
*/

body, div,
pre, dl, dt, dd,
fieldset, form, label, legend, th, td,
article, aside, figure, footer, header, hgroup, menu, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
}


/*
  Consistency fixes
  adopted from http://necolas.github.com/normalize.css/
*/

article, aside, details, figcaption, figure,
footer, header, hgroup, nav, section, audio, canvas, video {
  display: block;
}

html {
  height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

  body {min-height: 100%; font-size: 100%;}

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

  sup {top: -0.5em;}
  sub {bottom: -0.25em;}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

b, strong {font-weight: bold;}
abbr[title] {border-bottom: 1px dotted;}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

a img, img {
  -ms-interpolation-mode: bicubic;
  border: 0;
}

input, textarea, button, select {
  margin: 0;
  font-size: 100%;
  line-height: normal;
  vertical-align: baseline;
}

  button,
  html input[type="button"],
  input[type="reset"],
  input[type="submit"] {
      cursor: pointer;
      -webkit-appearance: button;
  }

  input[type="checkbox"],
  input[type="radio"] {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
         -o-box-sizing: border-box;
        -ms-box-sizing: border-box;
            box-sizing: border-box;
  }

  textarea {overflow: auto;}


/*
  These are easy to forget
*/

::selection {
  background: red;
  color: white;
}
::-moz-selection {
  background: red;
  color: white;
}

img::selection {
  background: transparent;
}
img::-moz-selection {
  background: transparent;
}

body {
  -webkit-tap-highlight-color: rgba(255,0,0, 0.62);
}
// }}}

$menu_height: 12mm;
$nav_bg_color: rgb(240, 245, 240);

@mixin gradient($property, $gradient_type, $params...) {
  #{$property}:    -moz-#{$gradient_type}-gradient($params);
  #{$property}:  -khtml-#{$gradient_type}-gradient($params);
  #{$property}: -webkit-#{$gradient_type}-gradient($params);
  #{$property}:     -ms-#{$gradient_type}-gradient($params);
  #{$property}:         #{$gradient_type}-gradient($params);
}

@mixin navigation {
  .nav-left, .nav-right, .nav-item {
    display: inline-block;
    // height: $menu_height;
    line-height: $menu_height;
    margin: 0;
    vertical-align: middle;
  }

  .nav-left {
  }

  .nav-right {
    position: absolute;
    right: 0;
  }

  .nav-right .lang {
    font-size: smaller;
  }

  .nav-item {
    padding: 0 2mm;

    a {
      color: #000;
      text-decoration: none;
    }
  }

  .nav-item:not(.nav-item-home) {
    a {
      &:hover, &:focus { color: #666; }
    }
  }

  .nav-item-home { font-size: larger; }
}

@mixin social-icon($image, $color) {
  $social-icon-size: 24px;

  background-image: url($image);
  background-repeat: no-repeat;
  background-size: $social-icon-size $social-icon-size;
  display: inline-block;
  height: $social-icon-size;
  position: relative;
  text-decoration: none;
  transition: linear 0.5s;

  &:hover, &:focus {
    background-color: $color;
    color: white;
  }

  img {
    height: $social-icon-size;
    width: $social-icon-size;
    position: absolute;
  }

  span {
    display: inline-block;
    height: $social-icon-size;
    left: $social-icon-size + 2px;
    line-height: $social-icon-size;
    position: relative;
    padding-right: $social-icon-size + 2px;
    
  }
}
// vim:set fdm=marker:
